<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.fit2cloud.support.dao.ext.ExtUserMapper">

    <resultMap id="userDtoMap" type="com.fit2cloud.commons.server.model.UserDTO">
        <id column="id" jdbcType="VARCHAR" property="id"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="email" jdbcType="VARCHAR" property="email"/>
        <result column="source" jdbcType="VARCHAR" property="source"/>
        <result column="active" jdbcType="BIT" property="active"/>
        <result column="phone" jdbcType="VARCHAR" property="phone"/>
        <result column="create_time" jdbcType="BIGINT" property="createTime"/>
        <result column="last_source_id" jdbcType="VARCHAR" property="lastSourceId"/>
        <result column="company" jdbcType="VARCHAR" property="company"/>
    </resultMap>

    <resultMap id="RoleInfoMap" type="com.fit2cloud.support.dto.RoleInfo">
        <result column="roleId" jdbcType="VARCHAR" property="roleId"/>
        <collection property="companyIds" ofType="java.lang.String" javaType="java.util.List">
            <result column="companyId"/>
        </collection>
        <collection property="departmentIds" ofType="java.lang.String" javaType="java.util.List">
            <result column="departmentId"/>
        </collection>
    </resultMap>

    <select id="paging" resultMap="userDtoMap">
        select
        user.*,
        sum(if(role.parent_id = 'ADMIN', 100000, if(role.parent_id = 'ORGADMIN', 500, if(role.parent_id = 'USER',
        1,0)))) countFraction,
        role.parent_id as parentId,
        (select name from company t join user_role t1 on t.id = t1.source_id
        where user_id = #{map.id}) as company
        from user
        left join user_role on user.id = user_role.user_id
        left join role on role.id = user_role.role_id
        where 1=1
        <if test="map.id!=null">
            and user.id like #{map.id}
        </if>
        <if test="map.name!=null">
            and user.name like #{map.name}
        </if>
        <if test="map.email!=null">
            and user.email like #{map.email}
        </if>
        <if test="map.roleId!=null">
            and role.id = #{map.roleId}
        </if>
        <if test="map.resourceIds!=null and map.resourceIds.size>0">
            and user_role.source_id in
            <foreach collection="map.resourceIds" item="resourceId" index="index" open="(" close=")" separator=",">
                #{resourceId}
            </foreach>
        </if>
        <if test="map.resourceIds!=null and map.resourceIds.size==0">
            and false
        </if>
        group by user.id
        <if test="map.sort!=null">
            order by ${map.sort}
        </if>
        <if test="map.sort==null">
            order by countFraction desc,user.create_time desc
        </if>

    </select>
    <select id="countActivesUser" resultType="java.lang.Long">
        select count(user.id)
        from user
                 join user_role
        where user.id = user_role.user_id
          and user.active = true
          and user_role.role_id = #{roleName}
    </select>
    <select id="roleInfo" resultMap="RoleInfoMap">
        select role.id as roleId,
        IF(role.type = 'System', IF(role.id = 'ORGADMIN', user_role.source_id, null),
        IF(role.parent_id = 'ORGADMIN', user_role.source_id, null)) as companyId,
        IF(role.type = 'System', IF(role.id = 'USER', user_role.source_id, null),
        IF(role.parent_id = 'USER', user_role.source_id, null)) as departmentId
        from user_role
        join role
        where user_role.role_id = role.id
        and user_role.user_id = #{userId}
        <if test="resourceIds != null">
            AND user_role.source_id in
            <foreach collection="resourceIds" open="(" close=")" separator="," index="index" item="item">
                #{item}
            </foreach>
        </if>
    </select>
    <select id="resourcePaging" resultType="com.fit2cloud.commons.server.base.domain.Department">
        select
        <if test="resourceType =='department'">
            department.name as name,
            department.create_time as createTime
        </if>
        <if test="resourceType =='company'">
            company.name as name,
            company.create_time as createTime
        </if>
        from user_role
        <if test="resourceType =='department'">
            join department
        </if>
        <if test="resourceType =='company'">
            join company
        </if>
        where user_role.user_id = #{userId}
        and user_role.role_id = #{roleId}
        <if test="resourceType =='department'">
            and department.id = user_role.source_id
        </if>
        <if test="resourceType =='company'">
            and company.id = user_role.source_id
        </if>
    </select>
    <select id="getIds" resultType="java.lang.String">
        select id
        from user;
    </select>

    <select id="selectByPrimaryKey" parameterType="String" resultType="java.lang.Integer">
        select count(id)
        from user
        <where>
            name = #{name}
        </where>
    </select>

    <update id="updateUser" parameterType="com.fit2cloud.support.dto.UserOperateDTO">
        update user
        <set>
            <if test="email != null">
                email = #{email},
            </if>
            <if test="source != null">
                source = #{source},
            </if>
            <if test="password != null">
                password = #{password},
            </if>
            <if test="active != null">
                active = #{active},
            </if>
            <if test="phone != null">
                phone = #{phone},
            </if>
            <if test="lastSourceId != null">
                last_source_id = #{lastSourceId},
            </if>
            <if test="userName != null">
                user_name = #{userName},
            </if>
            <if test="deptShortName != null">
                dept_short_name = #{deptShortName},
            </if>
        </set>
        where name = #{name}
    </update>

    <select id="getUserList" parameterType="String" resultMap="com.fit2cloud.commons.server.base.mapper.UserMapper.BaseResultMap">
        select *
        from user
        <where>
            id = #{name}
            or name = #{name}
            or email = #{name}
        </where>
    </select>

    <resultMap id="userKeysDTOList" type="com.fit2cloud.support.dto.UserKeysDTO">
        <id column="id" jdbcType="VARCHAR" property="id"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="email" jdbcType="VARCHAR" property="email"/>
        <result column="source" jdbcType="VARCHAR" property="source"/>
        <result column="active" jdbcType="BIT" property="active"/>
        <result column="phone" jdbcType="VARCHAR" property="phone"/>
        <result column="create_time" jdbcType="BIGINT" property="createTime"/>
        <result column="last_source_id" jdbcType="VARCHAR" property="lastSourceId"/>
        <collection property="userKeyList" column="id" select="getUserKeyList"></collection>
    </resultMap>


    <select id="getUserKeysDTOList" resultMap="userKeysDTOList">
        select *
        from user
    </select>

    <select id="getUserKeyList" resultMap="com.fit2cloud.commons.server.base.mapper.UserKeyMapper.BaseResultMap">
        select *
        from user_key
        <where>
            user_id = #{id}
        </where>
    </select>




</mapper>
